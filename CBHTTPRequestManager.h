//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "CBAFHTTPRequestOperationManager.h"

@class CBHTTPRequestDataManager, NSDictionary, NSManagedObjectContext, NSOperationQueue;

@interface CBHTTPRequestManager : CBAFHTTPRequestOperationManager
{
    _Bool _defaultFlush;
    NSManagedObjectContext *_managedObjectContext;
    NSDictionary *_apiRetryRules;
    NSOperationQueue *_retryOperationQueue;
    CBHTTPRequestDataManager *_requestManagerPersistence;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)shared;
@property(retain, nonatomic) CBHTTPRequestDataManager *requestManagerPersistence; // @synthesize requestManagerPersistence=_requestManagerPersistence;
@property(retain) NSOperationQueue *retryOperationQueue; // @synthesize retryOperationQueue=_retryOperationQueue;
@property(retain, nonatomic) NSDictionary *apiRetryRules; // @synthesize apiRetryRules=_apiRetryRules;
@property(nonatomic) _Bool defaultFlush; // @synthesize defaultFlush=_defaultFlush;
@property(retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
- (void).cxx_destruct;
- (void)createDummyData;
- (id)getDictionaryForLogging:(id)arg1;
- (void)logFailureOfRequest:(id)arg1 error:(id)arg2;
- (void)logSuccessOfRequest:(id)arg1 response:(id)arg2;
- (void)deleteCache;
- (void)setupReachabilityManager;
- (id)enqueueOperation:(id)arg1 sendNow:(_Bool)arg2 withQueue:(id)arg3;
- (void)delayFor:(unsigned long long)arg1 withContinuation:(id)arg2 operationQueue:(id)arg3;
- (void)addRetryOperation:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 stream:(id)arg4 serializer:(id)arg5 autoRetryOf:(unsigned long long)arg6 retryInterval:(unsigned long long)arg7 error:(id)arg8;
- (void)CBLogRequestSuccessDone:(id)arg1;
- (void)CBLogRequestSuccess:(id)arg1;
- (void)CBLogRequestFailureDone:(id)arg1;
- (void)CBLogRequestFailure:(id)arg1 error:(id)arg2;
- (id)CBHTTPAPIRequestOperationWithRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 stream:(id)arg4 serializer:(id)arg5 autoRetryOf:(unsigned long long)arg6 retryInterval:(unsigned long long)arg7;
- (id)createRequestOperation:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 stream:(id)arg4 autoRetryOf:(unsigned long long)arg5;
- (void)addRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 stream:(id)arg4 autoRetryOf:(unsigned long long)arg5 sendNow:(_Bool)arg6 priority:(long long)arg7 withQueue:(id)arg8;
- (void)addRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 stream:(id)arg4 autoRetryOf:(unsigned long long)arg5 sendNow:(_Bool)arg6 priority:(long long)arg7;
- (void)addRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 stream:(id)arg4 autoRetryOf:(unsigned long long)arg5 sendNow:(_Bool)arg6;
- (void)addRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 autoRetryOf:(unsigned long long)arg4 sendNow:(_Bool)arg5;
- (void)addRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3 sendNow:(_Bool)arg4;
- (void)addRequest:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (unsigned long long)retryIntervalForRequest:(id)arg1;
- (unsigned long long)nextBackoffForRequest:(id)arg1 intervalInSeconds:(unsigned long long)arg2;
- (unsigned long long)initialRetryIntervalForRequest:(id)arg1;
- (void)createAndAddRequestOperationWithRequest:(id)arg1 retryCount:(id)arg2;
- (void)createAndAddRequestOperationWithBatchedData:(id)arg1 path:(id)arg2 retryCount:(id)arg3;
- (void)createAndAddRequestOperationWithBody:(id)arg1 path:(id)arg2 retryCount:(id)arg3;
- (void)processRequestBatchArray:(id)arg1 apiRetryRules:(id)arg2 path:(id)arg3;
- (void)processRequestsFromCoreDataNotInOperationQueueWithRequests:(id)arg1 path:(id)arg2 apiRetryRules:(id)arg3;
- (void)updateOperationsQueueFromCoreData:(_Bool)arg1;
- (void)populateOperationQueueFromCoreData;
- (void)initializeOperationQueueFromCoreData;
- (void)removeRequestFromRetrySystem:(id)arg1;
- (void)removeRequestInCoreData:(id)arg1;
- (void)updateRequestInCoreData:(id)arg1;
- (void)saveRequestInCoreData:(id)arg1 inOperationQueue:(_Bool)arg2;
- (_Bool)failedRequestShouldBeRetried:(id)arg1 operation:(id)arg2 error:(id)arg3 timesToRetry:(unsigned long long)arg4;
- (_Bool)requestShouldBeRetried:(id)arg1;
- (id)retryRuleForRequest:(id)arg1;
- (long long)timesToRetryForRequest:(id)arg1;
- (id)retryRulesDictionary;
- (void)updateApiRetryRules;
- (id)initializeApiRetryQueueSizePerRouteFromApiRetryRules:(id)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

