/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "CBAFHTTPRequestOperationManager.h"
#import "wotblitz-Structs.h"

@class CBHTTPRequestDataManager, NSOperationQueue, NSManagedObjectContext, NSDictionary;

@interface CBHTTPRequestManager : CBAFHTTPRequestOperationManager {
	BOOL _defaultFlush;
	NSManagedObjectContext* _managedObjectContext;
	NSDictionary* _apiRetryRules;
	NSOperationQueue* _retryOperationQueue;
	CBHTTPRequestDataManager* _requestManagerPersistence;
}
@property(retain, nonatomic) CBHTTPRequestDataManager* requestManagerPersistence;
@property(retain) NSOperationQueue* retryOperationQueue;
@property(retain, nonatomic) NSDictionary* apiRetryRules;
@property(assign, nonatomic) BOOL defaultFlush;
@property(retain, nonatomic) NSManagedObjectContext* managedObjectContext;
+(id)allocWithZone:(NSZone*)zone;
+(id)shared;
-(void).cxx_destruct;
-(void)createDummyData;
-(id)getDictionaryForLogging:(id)logging;
-(void)logFailureOfRequest:(id)request error:(id)error;
-(void)logSuccessOfRequest:(id)request response:(id)response;
-(void)deleteCache;
-(void)setupReachabilityManager;
-(id)enqueueOperation:(id)operation sendNow:(BOOL)now withQueue:(id)queue;
-(void)delayFor:(unsigned)aFor withContinuation:(id)continuation operationQueue:(id)queue;
-(void)addRetryOperation:(id)operation success:(id)success failure:(id)failure stream:(id)stream serializer:(id)serializer autoRetryOf:(unsigned)of retryInterval:(unsigned)interval error:(id)error;
-(void)CBLogRequestSuccessDone:(id)done;
-(void)CBLogRequestSuccess:(id)success;
-(void)CBLogRequestFailureDone:(id)done;
-(void)CBLogRequestFailure:(id)failure error:(id)error;
-(id)CBHTTPAPIRequestOperationWithRequest:(id)request success:(id)success failure:(id)failure stream:(id)stream serializer:(id)serializer autoRetryOf:(unsigned)of retryInterval:(unsigned)interval;
-(id)createRequestOperation:(id)operation success:(id)success failure:(id)failure stream:(id)stream autoRetryOf:(unsigned)of;
-(void)addRequest:(id)request success:(id)success failure:(id)failure stream:(id)stream autoRetryOf:(unsigned)of sendNow:(BOOL)now priority:(int)priority withQueue:(id)queue;
-(void)addRequest:(id)request success:(id)success failure:(id)failure stream:(id)stream autoRetryOf:(unsigned)of sendNow:(BOOL)now priority:(int)priority;
-(void)addRequest:(id)request success:(id)success failure:(id)failure stream:(id)stream autoRetryOf:(unsigned)of sendNow:(BOOL)now;
-(void)addRequest:(id)request success:(id)success failure:(id)failure autoRetryOf:(unsigned)of sendNow:(BOOL)now;
-(void)addRequest:(id)request success:(id)success failure:(id)failure sendNow:(BOOL)now;
-(void)addRequest:(id)request success:(id)success failure:(id)failure;
-(unsigned)retryIntervalForRequest:(id)request;
-(unsigned)nextBackoffForRequest:(id)request intervalInSeconds:(unsigned)seconds;
-(unsigned)initialRetryIntervalForRequest:(id)request;
-(void)createAndAddRequestOperationWithRequest:(id)request retryCount:(id)count;
-(void)createAndAddRequestOperationWithBatchedData:(id)batchedData path:(id)path retryCount:(id)count;
-(void)createAndAddRequestOperationWithBody:(id)body path:(id)path retryCount:(id)count;
-(void)processRequestBatchArray:(id)array apiRetryRules:(id)rules path:(id)path;
-(void)processRequestsFromCoreDataNotInOperationQueueWithRequests:(id)requests path:(id)path apiRetryRules:(id)rules;
-(void)updateOperationsQueueFromCoreData:(BOOL)coreData;
-(void)populateOperationQueueFromCoreData;
-(void)initializeOperationQueueFromCoreData;
-(void)removeRequestFromRetrySystem:(id)retrySystem;
-(void)removeRequestInCoreData:(id)coreData;
-(void)updateRequestInCoreData:(id)coreData;
-(void)saveRequestInCoreData:(id)coreData inOperationQueue:(BOOL)operationQueue;
-(BOOL)failedRequestShouldBeRetried:(id)failedRequest operation:(id)operation error:(id)error timesToRetry:(unsigned)retry;
-(BOOL)requestShouldBeRetried:(id)request;
-(id)retryRuleForRequest:(id)request;
-(int)timesToRetryForRequest:(id)request;
-(id)retryRulesDictionary;
-(void)updateApiRetryRules;
-(id)initializeApiRetryQueueSizePerRouteFromApiRetryRules:(id)apiRetryRules;
-(id)init;
-(id)copyWithZone:(NSZone*)zone;
@end

