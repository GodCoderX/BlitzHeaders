/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "PFObject.h"
#import "PFSubclassing.h"
#import "PFObjectPrivateSubclass.h"

@class NSString, NSMutableDictionary, NSMutableSet, PFUserState;

@interface PFUser : PFObject <PFObjectPrivateSubclass, PFSubclassing> {
	BOOL isCurrentUser;
	NSMutableDictionary* authData;
	NSMutableSet* linkedServiceNames;
	BOOL isLazy;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(copy, nonatomic) PFUserState* _state;
@property(assign, nonatomic) BOOL isLazy;
@property(readonly, assign, nonatomic) NSMutableSet* linkedServiceNames;
@property(readonly, assign, nonatomic) NSMutableDictionary* authData;
@property(assign, nonatomic) BOOL isCurrentUser;
@property(retain, nonatomic) NSString* email;
@property(retain, nonatomic) NSString* password;
@property(retain, nonatomic) NSString* username;
@property(readonly, assign) BOOL isNew;
@property(readonly, copy, nonatomic) NSString* sessionToken;
+(id)_newObjectStateWithParseClassName:(id)parseClassName objectId:(id)anId isComplete:(BOOL)complete;
+(void)enableAutomaticUser;
+(id)user;
+(void)logOutInBackgroundWithBlock:(id)block;
+(id)logOutInBackground;
+(void)logOut;
+(void)requestPasswordResetForEmailInBackground:(id)background target:(id)target selector:(SEL)selector;
+(void)requestPasswordResetForEmailInBackground:(id)background block:(id)block;
+(id)requestPasswordResetForEmailInBackground:(id)background;
+(BOOL)requestPasswordResetForEmail:(id)email error:(id*)error;
+(BOOL)requestPasswordResetForEmail:(id)email;
+(void)enableRevocableSessionInBackgroundWithBlock:(id)block;
+(id)enableRevocableSessionInBackground;
+(void)becomeInBackground:(id)background target:(id)target selector:(SEL)selector;
+(void)becomeInBackground:(id)background block:(id)block;
+(id)becomeInBackground:(id)background;
+(id)become:(id)become error:(id*)error;
+(id)become:(id)become;
+(void)_unregisterAuthenticationDelegateForAuthType:(id)authType;
+(id)logInWithAuthTypeInBackground:(id)background authData:(id)data;
+(void)registerAuthenticationDelegate:(id)delegate forAuthType:(id)authType;
+(void)logInWithUsernameInBackground:(id)background password:(id)password target:(id)target selector:(SEL)selector;
+(void)logInWithUsernameInBackground:(id)background password:(id)password block:(id)block;
+(id)logInWithUsernameInBackground:(id)background password:(id)password;
+(id)logInWithUsername:(id)username password:(id)password error:(id*)error;
+(id)logInWithUsername:(id)username password:(id)password;
+(id)currentUser;
+(id)parseClassName;
+(id)userController;
+(id)authenticationController;
+(id)objectFileCodingLogic;
+(id)_upgradeToRevocableSessionInBackground;
+(void)_setRevocableSessionEnabled:(BOOL)enabled;
+(BOOL)_isRevocableSessionEnabled;
+(id)_revocableSessionSynchronizationQueue;
+(id)logInLazyUserWithAuthType:(id)authType authData:(id)data;
+(void)_assertValidInstanceClassName:(id)name;
+(id)_getCurrentUserSessionTokenAsync;
+(id)currentSessionToken;
-(void).cxx_destruct;
-(void)signUpInBackgroundWithBlock:(id)block;
-(BOOL)_isAuthenticatedWithCurrentUser:(id)currentUser;
-(BOOL)isAuthenticated;
-(void)signUpInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(id)signUpInBackground;
-(BOOL)signUp:(id*)up;
-(BOOL)signUp;
-(void)fetchInBackgroundWithBlock:(id)block;
-(id)fetch:(id*)fetch;
-(id)fetchAsync:(id)async;
-(id)saveAsync:(id)async;
-(void)removeObjectForKey:(id)key;
-(void)setObject:(id)object forKey:(id)key;
-(id)_logOutAsync;
-(BOOL)isLinkedWithAuthType:(id)authType;
-(id)unlinkWithAuthTypeInBackground:(id)background;
-(id)linkWithAuthTypeInBackground:(id)background authData:(id)data;
-(id)_upgradeToRevocableSessionInBackground;
-(id)RESTDictionaryWithObjectEncoder:(id)objectEncoder operationSetUUIDs:(id*)uuids state:(id)state operationSetQueue:(id)queue;
-(void)mergeFromRESTDictionary:(id)restdictionary withDecoder:(id)decoder;
-(id)_constructSaveCommandForChanges:(id)changes sessionToken:(id)token objectEncoder:(id)encoder;
-(void)restoreAnonymity:(id)anonymity;
-(void)stripAnonymity;
-(id)signUpAsync:(id)async;
-(id)_logOutAsyncWithAuthType:(id)authType;
-(id)resolveLazinessAsync:(id)async;
-(void)synchronizeAllAuthData;
-(void)synchronizeAuthDataWithAuthType:(id)authType;
-(void)_mergeFromServerWithResult:(id)result decoder:(id)decoder completeData:(BOOL)data;
-(id)mergeFromObject:(id)object;
-(void)cleanUpAuthData;
-(id)handleSignUpResultAsync:(id)async;
-(id)_handleServiceLoginCommandResult:(id)result;
-(id)_currentServiceLoginCommandForChanges:(id)changes;
-(id)_currentSignUpCommandForChanges:(id)changes;
-(id)handleSaveResultAsync:(id)async;
-(id)_convertToDictionaryForSaving:(id)saving withObjectEncoder:(id)objectEncoder;
-(id)_validateSignUpAsync;
-(void)_checkSaveParametersWithCurrentUser:(id)currentUser;
-(id)displayClassName;
-(id)_validateSaveEventuallyAsync;
-(id)_validateDeleteAsync;
-(BOOL)needsDefaultACL;
-(void)setDefaultValues;
@end

