/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "PFObjectPrivateSubclass.h"
#import </libobjc.A.h>

@class NSMutableDictionary, NSMutableSet, NSDate, NSMutableArray, PFMulticastDelegate, PFTaskQueue, PFObjectEstimatedData, PFObjectState, NSString, PFACL;

@interface PFObject : NSObject <PFObjectPrivateSubclass> {
	BOOL dirty;
	NSMutableArray* operationSetQueue;
	NSObject* lock;
	PFObjectState* _pfinternal_state;
	PFObjectEstimatedData* _estimatedData;
	NSMutableSet* _availableKeys;
	int _deletingEventually;
	NSMutableDictionary* hashedObjectsCache;
	NSString* localId;
	PFTaskQueue* _eventuallyTaskQueue;
	PFMulticastDelegate* saveDelegate;
	PFTaskQueue* taskQueue;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) PFTaskQueue* taskQueue;
@property(retain, nonatomic) NSString* localId;
@property(retain, nonatomic) PFMulticastDelegate* saveDelegate;
@property(copy, nonatomic) NSMutableSet* _availableKeys;
@property(copy, nonatomic) PFObjectState* _state;
@property(retain, nonatomic) PFACL* ACL;
@property(readonly, assign, nonatomic) NSDate* createdAt;
@property(readonly, assign, nonatomic) NSDate* updatedAt;
@property(retain, nonatomic) NSString* objectId;
@property(readonly, assign) NSString* parseClassName;
+(id)subclassingController;
+(id)currentUserController;
+(id)pinningObjectStore;
+(id)objectBatchController;
+(id)objectFileCodingLogic;
+(id)objectController;
+(void)unpinAllInBackground:(id)background withName:(id)name block:(id)block;
+(id)unpinAllInBackground:(id)background withName:(id)name;
+(BOOL)unpinAll:(id)all withName:(id)name error:(id*)error;
+(BOOL)unpinAll:(id)all withName:(id)name;
+(void)unpinAllInBackground:(id)background block:(id)block;
+(id)unpinAllInBackground:(id)background;
+(BOOL)unpinAll:(id)all error:(id*)error;
+(BOOL)unpinAll:(id)all;
+(id)unpinAllObjectsInBackgroundWithName:(id)name;
+(void)unpinAllObjectsInBackgroundWithName:(id)name block:(id)block;
+(BOOL)unpinAllObjectsWithName:(id)name error:(id*)error;
+(BOOL)unpinAllObjectsWithName:(id)name;
+(void)unpinAllObjectsInBackgroundWithBlock:(id)block;
+(id)unpinAllObjectsInBackground;
+(BOOL)unpinAllObjects:(id*)objects;
+(BOOL)unpinAllObjects;
+(id)_pinAllInBackground:(id)background withName:(id)name includeChildren:(BOOL)children;
+(void)pinAllInBackground:(id)background withName:(id)name block:(id)block;
+(id)pinAllInBackground:(id)background withName:(id)name;
+(BOOL)pinAll:(id)all withName:(id)name error:(id*)error;
+(BOOL)pinAll:(id)all withName:(id)name;
+(void)pinAllInBackground:(id)background block:(id)block;
+(id)pinAllInBackground:(id)background;
+(BOOL)pinAll:(id)all error:(id*)error;
+(BOOL)pinAll:(id)all;
+(BOOL)resolveInstanceMethod:(SEL)method;
+(void)deleteAllInBackground:(id)background block:(id)block;
+(void)deleteAllInBackground:(id)background target:(id)target selector:(SEL)selector;
+(id)deleteAllInBackground:(id)background;
+(BOOL)deleteAll:(id)all error:(id*)error;
+(BOOL)deleteAll:(id)all;
+(void)saveAllInBackground:(id)background block:(id)block;
+(void)saveAllInBackground:(id)background target:(id)target selector:(SEL)selector;
+(id)saveAllInBackground:(id)background;
+(BOOL)saveAll:(id)all error:(id*)error;
+(BOOL)saveAll:(id)all;
+(void)fetchAllIfNeededInBackground:(id)background block:(id)block;
+(void)fetchAllIfNeededInBackground:(id)background target:(id)target selector:(SEL)selector;
+(id)fetchAllIfNeededInBackground:(id)background;
+(void)fetchAllInBackground:(id)background block:(id)block;
+(void)fetchAllInBackground:(id)background target:(id)target selector:(SEL)selector;
+(id)fetchAllInBackground:(id)background;
+(id)fetchAllIfNeeded:(id)needed error:(id*)error;
+(id)fetchAll:(id)all error:(id*)error;
+(id)fetchAllIfNeeded:(id)needed;
+(id)fetchAll:(id)all;
+(void)assertSubclassIsRegistered:(Class)registered;
+(id)queryWithPredicate:(id)predicate;
+(id)query;
+(void)registerSubclass;
+(id)_newObjectStateWithParseClassName:(id)parseClassName objectId:(id)anId isComplete:(BOOL)complete;
+(id)objectWithoutDataWithClassName:(id)className localId:(id)anId;
+(id)objectWithoutDataWithObjectId:(id)objectId;
+(id)object;
+(id)objectWithoutDataWithClassName:(id)className objectId:(id)anId;
+(id)objectWithClassName:(id)className dictionary:(id)dictionary;
+(id)objectWithClassName:(id)className;
+(id)objectWithClassName:(id)className objectId:(id)anId completeData:(BOOL)data;
+(id)_migrateObjectInBackgroundFromFile:(id)file toPin:(id)pin usingMigrationBlock:(id)block;
+(id)_migrateObjectInBackgroundFromFile:(id)file toPin:(id)pin;
+(id)_objectFromDictionary:(id)dictionary defaultClassName:(id)name completeData:(BOOL)data decoder:(id)decoder;
+(id)_objectFromDictionary:(id)dictionary defaultClassName:(id)name selectedKeys:(id)keys;
+(id)_objectFromDictionary:(id)dictionary defaultClassName:(id)name completeData:(BOOL)data;
+(void)_assertValidInstanceClassName:(id)name;
+(id)_enqueueSaveEventuallyChildrenOfObject:(id)object currentUser:(id)user;
+(id)_deepSaveAsync:(id)async withCurrentUser:(id)currentUser sessionToken:(id)token;
+(BOOL)canBeSerializedAsValue:(id)value afterSaving:(id)saving error:(id*)error;
+(void)collectDirtyChildren:(id)children children:(id)children2 files:(id)files currentUser:(id)user;
+(void)collectDirtyChildren:(id)children children:(id)children2 files:(id)files seen:(id)seen seenNew:(id)aNew currentUser:(id)user;
+(id)_enqueue:(id)enqueue forObjects:(id)objects;
+(void)unregisterSubclass:(Class)subclass;
-(void).cxx_destruct;
-(void)unpinInBackgroundWithName:(id)name block:(id)block;
-(id)unpinInBackgroundWithName:(id)name;
-(BOOL)unpinWithName:(id)name error:(id*)error;
-(BOOL)unpinWithName:(id)name;
-(void)unpinInBackgroundWithBlock:(id)block;
-(id)unpinInBackground;
-(BOOL)unpin:(id*)unpin;
-(BOOL)unpin;
-(id)_pinInBackgroundWithName:(id)name includeChildren:(BOOL)children;
-(id)pinInBackgroundWithName:(id)name;
-(void)pinInBackgroundWithName:(id)name block:(id)block;
-(BOOL)pinWithName:(id)name error:(id*)error;
-(BOOL)pinWithName:(id)name;
-(void)pinInBackgroundWithBlock:(id)block;
-(id)pinInBackground;
-(BOOL)pin:(id*)pin;
-(BOOL)pin;
-(void)forwardInvocation:(id)invocation;
-(id)_flatDescription;
-(id)_recursiveDescription;
-(id)allKeys;
-(void)setValue:(id)value forUndefinedKey:(id)undefinedKey;
-(id)valueForUndefinedKey:(id)undefinedKey;
-(void)incrementKey:(id)key byAmount:(id)amount;
-(void)incrementKey:(id)key;
-(void)removeObjectsInArray:(id)array forKey:(id)key;
-(void)removeObject:(id)object forKey:(id)key;
-(void)addUniqueObjectsFromArray:(id)array forKey:(id)key;
-(void)addUniqueObject:(id)object forKey:(id)key;
-(void)addObjectsFromArray:(id)array forKey:(id)key;
-(void)addObject:(id)object forKey:(id)key;
-(id)relationForKey:(id)key;
-(id)relationforKey:(id)key;
-(void)revertObjectForKey:(id)key;
-(void)revert;
-(void)removeObjectForKey:(id)key;
-(id)objectForKeyedSubscript:(id)keyedSubscript;
-(id)objectForKey:(id)key;
-(void)setObject:(id)object forKeyedSubscript:(id)keyedSubscript;
-(void)setObject:(id)object forKey:(id)key;
-(id)fetchFromLocalDatastoreInBackground;
-(void)fetchFromLocalDatastoreInBackgroundWithBlock:(id)block;
-(id)fetchFromLocalDatastore:(id*)localDatastore;
-(id)fetchFromLocalDatastore;
-(void)fetchIfNeededInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(void)fetchIfNeededInBackgroundWithBlock:(id)block;
-(id)fetchIfNeededInBackground;
-(id)fetchIfNeeded:(id*)needed;
-(id)fetchIfNeeded;
-(void)fetchInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(void)fetchInBackgroundWithBlock:(id)block;
-(id)fetchInBackground;
-(id)fetch:(id*)fetch;
-(id)fetch;
-(void)refreshInBackgroundWithBlock:(id)block;
-(void)refreshInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(id)refresh:(id*)refresh;
-(id)refresh;
-(BOOL)isDataAvailable;
-(BOOL)isDirtyForKey:(id)key;
-(BOOL)isDirty;
-(id)deleteEventually;
-(void)saveEventually:(id)eventually;
-(id)saveEventually;
-(void)saveInBackgroundWithBlock:(id)block;
-(void)saveInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(id)saveInBackground;
-(BOOL)save:(id*)save;
-(BOOL)save;
-(void)deleteInBackgroundWithBlock:(id)block;
-(void)deleteInBackgroundWithTarget:(id)target selector:(SEL)selector;
-(id)deleteInBackground;
-(BOOL)delete:(id*)aDelete;
-(BOOL)delete;
-(void)_notifyObjectIdChangedFrom:(id)from toObjectId:(id)objectId;
-(id)_estimatedData;
-(void)_objectWillSave;
-(id)_validateSaveEventuallyAsync;
-(id)_validateDeleteAsync;
-(id)_validateFetchAsync;
-(id)initWithObjectState:(id)objectState;
-(id)initWithClassName:(id)className;
-(id)init;
-(id)_collectFetchedObjects;
-(BOOL)needsDefaultACL;
-(void)setDefaultValues;
-(id)ACLWithoutCopying;
-(void)unregisterSaveListener:(id)listener;
-(void)registerSaveListener:(id)listener;
-(id)displayClassName;
-(id)displayObjectId;
-(void)_setObject:(id)object forKey:(id)key onlyIfDifferent:(BOOL)different;
-(id)_currentDeleteCommandWithSessionToken:(id)sessionToken;
-(id)_constructSaveCommandForChanges:(id)changes sessionToken:(id)token objectEncoder:(id)encoder;
-(id)deleteAsync:(id)async;
-(id)fetchAsync:(id)async;
-(id)saveAsync:(id)async;
-(void)startSave;
-(id)handleSaveResultAsync:(id)async;
-(void)_mergeFromServerWithResult:(id)result decoder:(id)decoder completeData:(BOOL)data;
-(void)_mergeAfterSaveWithResult:(id)result decoder:(id)decoder;
-(void)removeOldKeysAfterFetch:(id)fetch;
-(void)_mergeAfterFetchWithResult:(id)result decoder:(id)decoder completeData:(BOOL)data;
-(id)mergeFromObject:(id)object;
-(void)rebuildEstimatedData;
-(BOOL)_hasOutstandingOperations;
-(BOOL)_hasChanges;
-(id)unsavedChanges;
-(BOOL)_containsOperationSet:(id)set;
-(void)performOperation:(id)operation forKey:(id)key;
-(id)_convertToDictionaryForSaving:(id)saving withObjectEncoder:(id)objectEncoder;
-(id)_enqueueSaveEventuallyOperationAsync:(id)async;
-(id)_enqueueSaveEventuallyWithChildren:(BOOL)children;
-(void)mergeFromRESTDictionary:(id)restdictionary withDecoder:(id)decoder;
-(id)RESTDictionaryWithObjectEncoder:(id)objectEncoder operationSetUUIDs:(id*)uuids state:(id)state operationSetQueue:(id)queue;
-(id)RESTDictionaryWithObjectEncoder:(id)objectEncoder operationSetUUIDs:(id*)uuids;
-(void)resolveLocalId;
-(id)getOrCreateLocalId;
-(void)_checkSaveParametersWithCurrentUser:(id)currentUser;
-(BOOL)isDataAvailableForKey:(id)key;
-(void)_setDeleted:(BOOL)deleted;
-(void)setHasBeenFetched:(BOOL)fetched;
-(void)checkForChangesToMutableContainers;
-(void)checkForChangesToMutableContainer:(id)mutableContainer forKey:(id)key;
-(void)checkpointMutableContainer:(id)container;
-(void)checkpointAllMutableContainers;
-(BOOL)_areChildrenDirty:(id)dirty;
-(void)_setDirty:(BOOL)dirty;
-(BOOL)isDirty:(BOOL)dirty;
-(id)_saveChildrenInBackgroundWithCurrentUser:(id)currentUser sessionToken:(id)token;
-(BOOL)canBeSerializedAfterSaving:(id)saving withCurrentUser:(id)currentUser error:(id*)error;
-(void)waitUntilFinished;
-(id)lock;
@end

