//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PFObjectPrivateSubclass.h"

@class NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, PFACL, PFMulticastDelegate, PFObjectEstimatedData, PFObjectState, PFTaskQueue;

@interface PFObject : NSObject <PFObjectPrivateSubclass>
{
    _Bool dirty;
    NSMutableArray *operationSetQueue;
    NSObject *lock;
    PFObjectState *_pfinternal_state;
    PFObjectEstimatedData *_estimatedData;
    NSMutableSet *_availableKeys;
    int _deletingEventually;
    NSMutableDictionary *hashedObjectsCache;
    NSString *localId;
    PFTaskQueue *_eventuallyTaskQueue;
    PFMulticastDelegate *saveDelegate;
    PFTaskQueue *taskQueue;
}

+ (id)subclassingController;
+ (id)currentUserController;
+ (id)pinningObjectStore;
+ (id)objectBatchController;
+ (id)objectFileCodingLogic;
+ (id)objectController;
+ (void)unpinAllInBackground:(id)arg1 withName:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)unpinAllInBackground:(id)arg1 withName:(id)arg2;
+ (_Bool)unpinAll:(id)arg1 withName:(id)arg2 error:(id *)arg3;
+ (_Bool)unpinAll:(id)arg1 withName:(id)arg2;
+ (void)unpinAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)unpinAllInBackground:(id)arg1;
+ (_Bool)unpinAll:(id)arg1 error:(id *)arg2;
+ (_Bool)unpinAll:(id)arg1;
+ (id)unpinAllObjectsInBackgroundWithName:(id)arg1;
+ (void)unpinAllObjectsInBackgroundWithName:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (_Bool)unpinAllObjectsWithName:(id)arg1 error:(id *)arg2;
+ (_Bool)unpinAllObjectsWithName:(id)arg1;
+ (void)unpinAllObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
+ (id)unpinAllObjectsInBackground;
+ (_Bool)unpinAllObjects:(id *)arg1;
+ (_Bool)unpinAllObjects;
+ (id)_pinAllInBackground:(id)arg1 withName:(id)arg2 includeChildren:(_Bool)arg3;
+ (void)pinAllInBackground:(id)arg1 withName:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)pinAllInBackground:(id)arg1 withName:(id)arg2;
+ (_Bool)pinAll:(id)arg1 withName:(id)arg2 error:(id *)arg3;
+ (_Bool)pinAll:(id)arg1 withName:(id)arg2;
+ (void)pinAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)pinAllInBackground:(id)arg1;
+ (_Bool)pinAll:(id)arg1 error:(id *)arg2;
+ (_Bool)pinAll:(id)arg1;
+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (void)deleteAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)deleteAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)deleteAllInBackground:(id)arg1;
+ (_Bool)deleteAll:(id)arg1 error:(id *)arg2;
+ (_Bool)deleteAll:(id)arg1;
+ (void)saveAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)saveAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)saveAllInBackground:(id)arg1;
+ (_Bool)saveAll:(id)arg1 error:(id *)arg2;
+ (_Bool)saveAll:(id)arg1;
+ (void)fetchAllIfNeededInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)fetchAllIfNeededInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)fetchAllIfNeededInBackground:(id)arg1;
+ (void)fetchAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)fetchAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)fetchAllInBackground:(id)arg1;
+ (id)fetchAllIfNeeded:(id)arg1 error:(id *)arg2;
+ (id)fetchAll:(id)arg1 error:(id *)arg2;
+ (id)fetchAllIfNeeded:(id)arg1;
+ (id)fetchAll:(id)arg1;
+ (void)assertSubclassIsRegistered:(Class)arg1;
+ (id)queryWithPredicate:(id)arg1;
+ (id)query;
+ (void)registerSubclass;
+ (id)_newObjectStateWithParseClassName:(id)arg1 objectId:(id)arg2 isComplete:(_Bool)arg3;
+ (id)objectWithoutDataWithClassName:(id)arg1 localId:(id)arg2;
+ (id)objectWithoutDataWithObjectId:(id)arg1;
+ (id)object;
+ (id)objectWithoutDataWithClassName:(id)arg1 objectId:(id)arg2;
+ (id)objectWithClassName:(id)arg1 dictionary:(id)arg2;
+ (id)objectWithClassName:(id)arg1;
+ (id)objectWithClassName:(id)arg1 objectId:(id)arg2 completeData:(_Bool)arg3;
@property(retain, nonatomic) PFMulticastDelegate *saveDelegate; // @synthesize saveDelegate;
@property(retain, nonatomic) PFTaskQueue *taskQueue; // @synthesize taskQueue;
@property(retain, nonatomic) NSString *localId; // @synthesize localId;
@property(copy, nonatomic) NSMutableSet *_availableKeys; // @synthesize _availableKeys;
- (void).cxx_destruct;
- (void)unpinInBackgroundWithName:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)unpinInBackgroundWithName:(id)arg1;
- (_Bool)unpinWithName:(id)arg1 error:(id *)arg2;
- (_Bool)unpinWithName:(id)arg1;
- (void)unpinInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)unpinInBackground;
- (_Bool)unpin:(id *)arg1;
- (_Bool)unpin;
- (id)_pinInBackgroundWithName:(id)arg1 includeChildren:(_Bool)arg2;
- (id)pinInBackgroundWithName:(id)arg1;
- (void)pinInBackgroundWithName:(id)arg1 block:(CDUnknownBlockType)arg2;
- (_Bool)pinWithName:(id)arg1 error:(id *)arg2;
- (_Bool)pinWithName:(id)arg1;
- (void)pinInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)pinInBackground;
- (_Bool)pin:(id *)arg1;
- (_Bool)pin;
- (void)forwardInvocation:(id)arg1;
- (id)_flatDescription;
- (id)_recursiveDescription;
@property(readonly, copy) NSString *description;
- (id)allKeys;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (void)incrementKey:(id)arg1 byAmount:(id)arg2;
- (void)incrementKey:(id)arg1;
- (void)removeObjectsInArray:(id)arg1 forKey:(id)arg2;
- (void)removeObject:(id)arg1 forKey:(id)arg2;
- (void)addUniqueObjectsFromArray:(id)arg1 forKey:(id)arg2;
- (void)addUniqueObject:(id)arg1 forKey:(id)arg2;
- (void)addObjectsFromArray:(id)arg1 forKey:(id)arg2;
- (void)addObject:(id)arg1 forKey:(id)arg2;
- (id)relationForKey:(id)arg1;
- (id)relationforKey:(id)arg1;
- (void)revertObjectForKey:(id)arg1;
- (void)revert;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)fetchFromLocalDatastoreInBackground;
- (void)fetchFromLocalDatastoreInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)fetchFromLocalDatastore:(id *)arg1;
- (id)fetchFromLocalDatastore;
- (void)fetchIfNeededInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)fetchIfNeededInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)fetchIfNeededInBackground;
- (id)fetchIfNeeded:(id *)arg1;
- (id)fetchIfNeeded;
- (void)fetchInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)fetchInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)fetchInBackground;
- (id)fetch:(id *)arg1;
- (id)fetch;
- (void)refreshInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)refreshInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)refresh:(id *)arg1;
- (id)refresh;
- (_Bool)isDataAvailable;
- (_Bool)isDirtyForKey:(id)arg1;
- (_Bool)isDirty;
- (id)deleteEventually;
- (void)saveEventually:(CDUnknownBlockType)arg1;
- (id)saveEventually;
- (void)saveInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)saveInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)saveInBackground;
- (_Bool)save:(id *)arg1;
- (_Bool)save;
- (void)deleteInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)deleteInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)deleteInBackground;
- (_Bool)delete:(id *)arg1;
- (_Bool)delete;
@property(retain, nonatomic) PFACL *ACL;
@property(readonly, nonatomic) NSDate *createdAt;
@property(readonly, nonatomic) NSDate *updatedAt;
@property(readonly) NSString *parseClassName;
- (void)_notifyObjectIdChangedFrom:(id)arg1 toObjectId:(id)arg2;
@property(retain, nonatomic) NSString *objectId;
- (id)_estimatedData;
@property(copy, nonatomic) PFObjectState *_state;
- (void)_objectWillSave;
- (id)_validateSaveEventuallyAsync;
- (id)_validateDeleteAsync;
- (id)_validateFetchAsync;
- (id)initWithObjectState:(id)arg1;
- (id)initWithClassName:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

