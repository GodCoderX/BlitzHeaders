/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>
#import "CLSAnalyticsViewControllerTrackingDelegate.h"

@class CLSEventLogEventFile, NSData, CLSAnalyticsMetadataController, NSMutableArray, CLSAnalyticsTimestampGenerator, NSFileManager, NSURLSession, CLSEventLogSessionRepository, NSURL, CLSAnalyticsIdentifierGenerator, NSString, CLSAnalyticsNetworkingClient;
@protocol OS_dispatch_source, OS_dispatch_queue;

@interface CLSAnalyticsController : NSObject <CLSAnalyticsViewControllerTrackingDelegate> {
	NSURL* _analyticsRootDirectoryURL;
	BOOL _haveSettings;
	BOOL _settingsShouldCollectAnalytics;
	NSURL* _settingsAnalyticsURL;
	BOOL _settingsShouldTrackViewControllers;
	BOOL _settingsShouldFlushOnBackground;
	unsigned long _settingsMaxByteSizePerFile;
	unsigned _settingsFlushIntervalSecs;
	unsigned _settingsMaxPendingSendFileCount;
	BOOL _settingsTrackCustomEvents;
	BOOL _settingsTrackPredefinedEvents;
	int _settingsSamplingRate;
	NSString* _betaToken;
	NSString* _sessionIdentifier;
	unsigned long long _sessionTimestamp;
	CLSAnalyticsNetworkingClient* _networkingClient;
	NSFileManager* _fileManager;
	NSString* _currentSessionFragmentIdentifier;
	unsigned long long _currentSessionFragmentTimestamp;
	NSURL* _currentSessionFragmentDirectoryURL;
	BOOL _performSessionMaintenanceAfterSettingsArrive;
	CLSEventLogSessionRepository* _logSessionRepository;
	CLSAnalyticsMetadataController* _metadataController;
	CLSAnalyticsIdentifierGenerator* _identifierGenerator;
	CLSAnalyticsTimestampGenerator* _timestampGenerator;
	NSMutableArray* _sessionFragmentsToTransmit;
	NSURLSession* _session;
	NSObject<OS_dispatch_queue>* _sessionMaintenanceQueue;
	NSObject<OS_dispatch_source>* _sessionFragmentMaintenanceTimerSource;
	NSObject<OS_dispatch_queue>* _priorityEventLoggingQueues[3];
	NSURL* _priorityCurrentFragmentEventFileURLs[3];
	CLSEventLogEventFile* _priorityCurrentFragmentEventFiles[3];
	BOOL _loggedAnalyticsEnabled;
	NSString* _lastSessionIdentifier;
	unsigned long long _lastSessionTimestamp;
	NSData* _lastSessionMetadata;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) BOOL predefinedEventsFeatureSwitchEnabled;
@property(readonly, assign, nonatomic) BOOL customEventsFeatureSwitchEnabled;
@property(readonly, assign, nonatomic) NSObject<OS_dispatch_queue>* sessionMaintenanceQueue;
+(id)mutableSortedFileURLsGroupedByPrioritiesFromLogFileURLs:(id)logFileURLs;
+(BOOL)deviceMeetsMinimumRequirements;
+(BOOL)supported;
-(void)handleSubmissionRequestCompletion:(id)completion withRestart:(BOOL)restart forSessionFragmentDirectory:(id)sessionFragmentDirectory error:(id)error completionHandler:(id)handler;
-(void)maintainSessionFragments:(id)fragments;
-(void)maintainSessionFragmentsIgnoringError;
-(void)cleanUpRepository:(id)repository;
-(void)pruneSessionFragmentLogFiles:(id)files;
-(id)nonCurrentLogFileURLsForAllStates:(id*)allStates;
-(void)scheduleSessionMaintenance;
-(unsigned long long)initialMaintenanceTimeWithFlushInterval:(double)flushInterval;
-(void)cancelSessionMaintenance;
-(void)saveLastMaintenanceDate:(id)date;
-(id)lastMaintenanceDate;
-(void)transmitPackagedSessionFragments:(id)fragments;
-(void)transmitNextPackagedSessionFragment:(id)fragment;
-(void)transmitLogsForSessionFragmentDirectory:(id)sessionFragmentDirectory completion:(id)completion;
-(void)packageClosedSessionFragments:(id)fragments;
-(BOOL)runPackageClosedSessionFragments:(id*)fragments;
-(BOOL)packageLogsFromActiveSessionFragmentDirectoryURL:(id)activeSessionFragmentDirectoryURL intoPackagedSessionFragmentDirectoryURL:(id)url error:(id*)error;
-(BOOL)isOpenSessionFragmentDirectoryURL:(id)url;
-(BOOL)purgePackagedPrepSessionFragmentDirectories;
-(id)sessionFragmentDirectoryURLsForStateName:(id)stateName error:(id*)error;
-(void)openNewSessionFragment:(id)fragment;
-(BOOL)runOpenNewSessionFragment:(id*)fragment;
-(void)viewControllerTrackingController:(id)controller didDetectDisappearanceOfViewController:(id)viewController;
-(void)viewControllerTrackingController:(id)controller didDetectAppearanceOfViewController:(id)viewController;
-(void)logPreviousSessionCrashedOnDate:(id)date;
-(void)logAppLaunched;
-(void)logAppInstalled;
-(BOOL)prepareNewSessionFragmentWithIdentifier:(id)identifier timestamp:(unsigned long long)timestamp error:(id*)error;
-(id)createEventFileURLForPriority:(unsigned)priority error:(id*)error;
-(void)logEvent:(id)event;
-(BOOL)ensureLogFileExistsForPriority:(unsigned)priority error:(id*)error;
-(BOOL)handlePriorityTriggeredMaintainSessionFragmentForEvent:(id)event;
-(BOOL)handleSizeTriggeredMaintainSessionFragmentForLogFile:(id)logFile;
-(void)logCustomEvent:(id)event;
-(void)logPredefinedEvent:(id)event;
-(void)logAnswersEvent:(id)event;
-(void)applicationLifecycleEvent:(id)event;
-(void)dispatchToQueue:(id)queue asynchronous:(BOOL)asynchronous block:(id)block;
-(void)handleDisabledFeatureSwitch;
-(void)saveCurrentSessionInformation;
-(void)readLastSessionInformation;
-(void)saveShouldStartTrackingViewControllers:(BOOL)save;
-(BOOL)readShouldStartTrackingViewControllers;
-(id)metadataJSONData;
-(id)metadataController;
-(BOOL)analyticsFeatureSwitchEnabled;
-(id)fabricInstallId;
-(id)fabricAPIKey;
-(BOOL)fabricIsFirstInstall;
-(id)fabricSettings;
-(void)setSettings:(id)settings;
-(void)fabricSettingsDownloaded:(id)downloaded;
-(id)initWithSessionIdentifier:(id)sessionIdentifier sessionTimestamp:(unsigned long long)timestamp analyticsRootDirectoryWithURL:(id)url betaToken:(id)token identifierGenerator:(id)generator timestampGenerator:(id)generator6 metadataController:(id)controller networkingClient:(id)client;
-(id)initWithSessionIdentifier:(id)sessionIdentifier analyticsRootDirectoryWithURL:(id)url betaToken:(id)token;
-(void)dealloc;
@end

