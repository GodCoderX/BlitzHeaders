/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>

@class NSMutableDictionary, NSString, TAGExpandedResource, TAGDataLayer, NSCache, NSSet;

__attribute__((visibility("hidden")))
@interface TAGRuntime : NSObject {
	TAGExpandedResource* _resource;
	NSString* _currentEventName;
	NSMutableDictionary* _trackingTagMap;
	NSMutableDictionary* _predicateMap;
	NSMutableDictionary* _macroMap;
	NSCache* _functionCallCache;
	NSCache* _macroEvaluationCache;
	NSSet* _rules;
	NSMutableDictionary* _macroLookup;
	TAGDataLayer* _dataLayer;
}
@property(readonly, retain, nonatomic) TAGDataLayer* dataLayer;
@property(readonly, retain, nonatomic) NSMutableDictionary* macroLookup;
@property(readonly, retain, nonatomic) NSSet* rules;
@property(readonly, retain, nonatomic) NSCache* macroEvaluationCache;
@property(readonly, retain, nonatomic) NSCache* functionCallCache;
@property(readonly, retain, nonatomic) NSMutableDictionary* macroMap;
@property(readonly, retain, nonatomic) NSMutableDictionary* predicateMap;
@property(readonly, retain, nonatomic) NSMutableDictionary* trackingTagMap;
@property(copy) NSString* currentEventName;
@property(readonly, assign, nonatomic) TAGExpandedResource* resource;
+(void)addFunctionImplToDict:(id)dict functionCallImpl:(id)impl;
+(id)functionNameFromFunctionCall:(id)functionCall;
+(id)addOrGetMacroInfoForKey:(id)key macroLookup:(id)lookup;
+(id)runtimeWithResource:(id)resource dataLayer:(id)layer functionCallMacroEvaluator:(id)evaluator functionCallTagEvaluator:(id)evaluator4;
+(void)initialize;
-(void).cxx_destruct;
-(id)executeFunction:(id)function implementationMap:(id)map pendingMacroExpansions:(id)expansions;
-(id)expandMacrosForValue:(id)value pendingMacroExpansions:(id)expansions;
-(id)expandTemplateValue:(id)value pendingMacroExpansions:(id)expansions;
-(id)expandMacroReferenceValue:(id)value pendingMacroExpansions:(id)expansions;
-(id)expandMapValue:(id)value pendingMacroExpansions:(id)expansions;
-(id)expandListValue:(id)value pendingMacroExpansions:(id)expansions;
-(void)pushUnevaluatedValueToDataLayer:(id)dataLayer pendingMacroExpansions:(id)expansions;
-(id)evaluateMacroReferenceWithCycleDetection:(id)cycleDetection pendingMacroExpansions:(id)expansions;
-(id)evaluateMacroReference:(id)reference;
-(id)evaluatePredicatesInRule:(id)rule pendingMacroExpansions:(id)expansions;
-(id)evaluatePredicate:(id)predicate pendingMacroExpansions:(id)expansions;
-(void)addPredicate:(id)predicate;
-(void)addTrackingTag:(id)tag;
-(void)addMacro:(id)macro;
-(id)calculateGenericToRunForRules:(id)rules pendingMacroExpansions:(id)expansions populator:(id)populator;
-(id)calculateTagsToRunForRules:(id)rules;
-(id)calculateMacrosToRunForRules:(id)rules macroName:(id)name addMacros:(id)macros removeMacros:(id)macros4 pendingMacroExpansions:(id)expansions;
-(void)evaluateTags:(id)tags;
-(void)setSupplementals:(id)supplementals;
-(id)initWithResource:(id)resource dataLayer:(id)layer functionCallMacroEvaluator:(id)evaluator functionCallTagEvaluator:(id)evaluator4;
@end

