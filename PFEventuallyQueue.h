/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>
#import "PFReachabilityListener.h"
#import "wotblitz-Structs.h"

@class NSMutableDictionary, PFTaskQueue, NSString, BFExecutor, PFEventuallyQueueTestHelper;
@protocol OS_dispatch_source, OS_dispatch_semaphore, OS_dispatch_queue, PFCommandRunning;

@interface PFEventuallyQueue : NSObject <PFReachabilityListener> {
	BFExecutor* _synchronizationExecutor;
	NSObject<OS_dispatch_queue>* _synchronizationQueue;
	SCNetworkReachabilityRef _reachability;
	NSObject<OS_dispatch_queue>* _reachabilityQueue;
	NSObject<OS_dispatch_queue>* _processingQueue;
	NSObject<OS_dispatch_source>* _processingQueueSource;
	NSObject<OS_dispatch_semaphore>* _retryingSemaphore;
	NSMutableDictionary* _taskCompletionSources;
	PFTaskQueue* _commandEnqueueTaskQueue;
	BOOL _monitorsReachability;
	BOOL _connected;
	BOOL _running;
	id<PFCommandRunning> _commandRunner;
	unsigned _maxAttemptsCount;
	PFEventuallyQueueTestHelper* _testHelper;
	double _retryInterval;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, getter=isRunning) BOOL running;
@property(readonly, assign, nonatomic) PFEventuallyQueueTestHelper* testHelper;
@property(assign, nonatomic, getter=isConnected) BOOL connected;
@property(assign) BOOL monitorsReachability;
@property(readonly, assign, nonatomic) unsigned commandCount;
@property(readonly, assign, nonatomic) double retryInterval;
@property(readonly, assign, nonatomic) unsigned maxAttemptsCount;
@property(readonly, assign, nonatomic) id<PFCommandRunning> commandRunner;
-(void).cxx_destruct;
-(void)reachability:(id)reachability didChangeReachabilityState:(unsigned char)state;
-(void)_setRetryInterval:(double)interval;
-(void)_setMaxAttemptsCount:(unsigned)count;
-(void)_notifyTestHelperObjectUpdated;
-(int)_commandsInMemory;
-(void)_simulateReboot;
-(void)_stopMonitoringNetworkReachability;
-(void)_startMonitoringNetworkReachability;
-(id)_waitForOperationSet:(id)operationSet eventuallyPin:(id)pin;
-(id)_didFinishRunningCommand:(id)command withIdentifier:(id)identifier resultTask:(id)task;
-(id)_runCommand:(id)command withIdentifier:(id)identifier;
-(void)_runCommandsWithRetriesCount:(unsigned)retriesCount;
-(void)_runCommands;
-(void)removeAllCommands;
-(void)pause;
-(void)resume;
-(void)start;
-(id)_newIdentifierForCommand:(id)command;
-(id)_commandWithIdentifier:(id)identifier error:(id*)error;
-(id)_pendingCommandIdentifiers;
-(void)_didEnqueueCommand:(id)command withIdentifier:(id)identifier taskCompletionSource:(id)source;
-(id)_enqueueCommandInBackground:(id)background object:(id)object identifier:(id)identifier;
-(id)enqueueCommandInBackground:(id)background withObject:(id)object;
-(id)enqueueCommandInBackground:(id)background;
-(void)dealloc;
-(id)initWithCommandRunner:(id)commandRunner maxAttemptsCount:(unsigned)count retryInterval:(double)interval;
-(id)init;
@end

