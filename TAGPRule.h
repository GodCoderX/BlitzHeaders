/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "TAGPBGeneratedMessage.h"

@class TAGPBMutableArray;

__attribute__((visibility("hidden")))
@interface TAGPRule : TAGPBGeneratedMessage {
}
@property(retain, nonatomic) TAGPBMutableArray* removeMacroRuleTriggerIdArray;
@property(assign, nonatomic) BOOL hasRemoveMacroRuleTriggerIdArray;
@property(retain, nonatomic) TAGPBMutableArray* addMacroRuleTriggerIdArray;
@property(assign, nonatomic) BOOL hasAddMacroRuleTriggerIdArray;
@property(retain, nonatomic) TAGPBMutableArray* removeTagRuleTriggerIdArray;
@property(assign, nonatomic) BOOL hasRemoveTagRuleTriggerIdArray;
@property(retain, nonatomic) TAGPBMutableArray* addTagRuleTriggerIdArray;
@property(assign, nonatomic) BOOL hasAddTagRuleTriggerIdArray;
@property(retain, nonatomic) TAGPBMutableArray* removeMacroRuleNameArray;
@property(assign, nonatomic) BOOL hasRemoveMacroRuleNameArray;
@property(retain, nonatomic) TAGPBMutableArray* addMacroRuleNameArray;
@property(assign, nonatomic) BOOL hasAddMacroRuleNameArray;
@property(retain, nonatomic) TAGPBMutableArray* removeMacroArray;
@property(assign, nonatomic) BOOL hasRemoveMacroArray;
@property(retain, nonatomic) TAGPBMutableArray* addMacroArray;
@property(assign, nonatomic) BOOL hasAddMacroArray;
@property(retain, nonatomic) TAGPBMutableArray* removeTagRuleNameArray;
@property(assign, nonatomic) BOOL hasRemoveTagRuleNameArray;
@property(retain, nonatomic) TAGPBMutableArray* addTagRuleNameArray;
@property(assign, nonatomic) BOOL hasAddTagRuleNameArray;
@property(retain, nonatomic) TAGPBMutableArray* removeTagArray;
@property(assign, nonatomic) BOOL hasRemoveTagArray;
@property(retain, nonatomic) TAGPBMutableArray* addTagArray;
@property(assign, nonatomic) BOOL hasAddTagArray;
@property(retain, nonatomic) TAGPBMutableArray* negativePredicateArray;
@property(assign, nonatomic) BOOL hasNegativePredicateArray;
@property(retain, nonatomic) TAGPBMutableArray* positivePredicateArray;
@property(assign, nonatomic) BOOL hasPositivePredicateArray;
+(id)descriptor;
@end

