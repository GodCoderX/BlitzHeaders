/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "UIGestureRecognizerDelegate.h"
#import "wotblitz-Structs.h"
#import </libobjc.A.h>
#import "FBAdViewabilityValidatorDelegate.h"
#import "FBDisplayAdControllerDelegate.h"

@class FBNativeAdViewAttributes, NSDictionary, FBAdViewabilityValidator, NSDate, UIView, FBAdProvider, FBNativeAdDataModel, FBDisplayAdController, NSURL, NSHashTable, UIViewController, NSString, FBAdImage;
@protocol FBNativeAdDelegate;

@interface FBNativeAd : NSObject <FBDisplayAdControllerDelegate, FBAdViewabilityValidatorDelegate, UIGestureRecognizerDelegate> {
	BOOL _hasBeenUsed;
	BOOL _hasCalledLoadAd;
	BOOL _isHScroll;
	BOOL _usedByMediaView;
	BOOL _viewabilityValidatorDisabled;
	BOOL _bypassValidation;
	NSString* _placementID;
	int _mediaCachePolicy;
	id<FBNativeAdDelegate> _delegate;
	FBDisplayAdController* _adController;
	FBAdProvider* _adProvider;
	NSDictionary* _mediaViewConfiguration;
	FBAdViewabilityValidator* _viewabilityValidator;
	NSHashTable* _gestureRecognizers;
	int _minViewabilityPercentage;
	UIViewController* _viewController;
	NSDate* _loadAdStartTime;
	FBNativeAdDataModel* _dataModel;
	FBAdImage* _adChoicesIcon;
	NSURL* _adChoicesLinkURL;
	NSString* _adChoicesText;
	FBNativeAdViewAttributes* _adViewAttributes;
	UIView* _nativeAdView;
	NSHashTable* _clickableViews;
	id _onImpression;
	id _onClick;
	id _onVideoPlay;
	id _onVideoTime;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(copy, nonatomic) id onVideoTime;
@property(copy, nonatomic) id onVideoPlay;
@property(copy, nonatomic) id onClick;
@property(copy, nonatomic) id onImpression;
@property(assign, nonatomic, getter=shouldBypassValidation) BOOL bypassValidation;
@property(assign, nonatomic) BOOL viewabilityValidatorDisabled;
@property(retain, nonatomic) NSHashTable* clickableViews;
@property(assign, nonatomic) __weak UIView* nativeAdView;
@property(retain, nonatomic) FBNativeAdViewAttributes* adViewAttributes;
@property(copy, nonatomic) NSString* adChoicesText;
@property(copy, nonatomic) NSURL* adChoicesLinkURL;
@property(retain, nonatomic) FBAdImage* adChoicesIcon;
@property(retain, nonatomic) FBNativeAdDataModel* dataModel;
@property(retain, nonatomic) NSDate* loadAdStartTime;
@property(assign, nonatomic) __weak UIViewController* viewController;
@property(assign, nonatomic) int minViewabilityPercentage;
@property(retain, nonatomic) NSHashTable* gestureRecognizers;
@property(retain, nonatomic) FBAdViewabilityValidator* viewabilityValidator;
@property(retain, nonatomic) NSDictionary* mediaViewConfiguration;
@property(assign, nonatomic) BOOL usedByMediaView;
@property(assign, nonatomic) BOOL isHScroll;
@property(assign, nonatomic) BOOL hasCalledLoadAd;
@property(retain, nonatomic) FBAdProvider* adProvider;
@property(retain, nonatomic) FBDisplayAdController* adController;
@property(assign, nonatomic) BOOL hasBeenUsed;
@property(readonly, assign, nonatomic, getter=isAdValid) BOOL adValid;
@property(assign, nonatomic) __weak id<FBNativeAdDelegate> delegate;
@property(assign, nonatomic) int mediaCachePolicy;
@property(readonly, copy, nonatomic) NSString* body;
@property(readonly, assign, nonatomic) FBAdImage* coverImage;
@property(readonly, assign, nonatomic) FBAdImage* icon;
@property(readonly, copy, nonatomic) NSString* callToAction;
@property(readonly, copy, nonatomic) NSString* socialContext;
@property(readonly, copy, nonatomic) NSString* subtitle;
@property(readonly, copy, nonatomic) NSString* title;
@property(readonly, assign, nonatomic) FBAdStarRating starRating;
@property(copy, nonatomic) NSString* placementID;
+(id)fakeNativeAd;
+(void)unregisterOutstandingRequest:(id)request;
+(void)registerOutstandingRequest:(id)request;
+(id)viewToNativeAdMap;
-(void).cxx_destruct;
-(BOOL)viewDidAppearOnScreen;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(void)used;
-(id)generateTapLoggingWithLocation:(CGPoint)location inRect:(CGRect)rect;
-(void)handleTap:(id)tap withEvent:(id)event;
-(void)handleTap:(id)tap;
-(void)detachTapGestureRecognizers;
-(void)attachTapGestureRecognizer:(id)recognizer;
-(id)generateViewSnapshotData;
-(id)generateViewSnapshot;
-(id)loggingDataForView:(id)view withSubviews:(BOOL)subviews;
-(id)generateLoggingWithView:(id)view withClickableViews:(id)clickableViews;
-(id)generateViewLogging;
-(id)generateViewPostData;
-(id)generateLoggingDataWithExtraData:(id)extraData;
-(id)generateLoggingData;
-(void)unregisterViewInternal;
-(void)unregisterView;
-(BOOL)isRegistered;
-(void)registerViewForInteraction:(id)interaction withViewController:(id)viewController withClickableViews:(id)clickableViews;
-(void)registerViewForInteraction:(id)interaction withViewController:(id)viewController;
-(void)disableViewabilityValidator;
-(void)displayAdController:(id)controller didFailWithError:(id)error;
-(void)displayAdControllerUserClosed:(id)closed;
-(void)displayAdController:(id)controller clickThruWithURL:(id)url;
-(void)displayAdControllerImpression:(id)impression;
-(void)displayAdControllerStopped:(id)stopped;
-(void)displayAdController:(id)controller presentedData:(id)data onImpression:(id)impression onClick:(id)click onVideoPlay:(id)play onVideoTime:(id)time;
-(void)displayAdControllerLoaded:(id)loaded;
-(void)populateFromDataModel:(id)dataModel minViewability:(int)viewability onImpression:(id)impression onClick:(id)click onVideoPlay:(id)play onVideoTime:(id)time;
-(void)loadAdInternal;
-(void)loadAd;
-(id)copyWithZone:(NSZone*)zone;
-(void)dealloc;
-(id)initWithPlacementID:(id)placementID adProvider:(id)provider;
-(id)initWithPlacementID:(id)placementID;
-(id)init;
-(void)logVideoTime:(double)time withInlineView:(BOOL)inlineView;
-(id)videoPlayReportTime;
-(void)logVideoPlay;
-(BOOL)autoPlayEnabled;
-(id)videoURL;
-(id)getExternalLoggingExtraDataWithSource:(id)source;
-(void)handleExternalClickWithViewController:(id)viewController fromSource:(id)source;
-(void)logExternalImpressionFromSource:(id)source;
-(void)checkManualLoggingEligibility;
-(id)getManualLoggingExtraData;
-(void)handleClickWithViewController:(id)viewController;
-(void)logImpression;
@end

