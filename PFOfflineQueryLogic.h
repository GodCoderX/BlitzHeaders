/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>

@class PFOfflineStore;

@interface PFOfflineQueryLogic : NSObject {
	PFOfflineStore* _offlineStore;
}
@property(assign, nonatomic) __weak PFOfflineStore* offlineStore;
+(BOOL)userHasWriteAccess:(id)access ofObject:(id)object;
+(BOOL)userHasReadAccess:(id)access ofObject:(id)object;
+(BOOL)matchesValue:(id)value constraint:(id)constraint operator:(id)anOperator allKeyConstraints:(id)constraints;
+(BOOL)matchesValue:(id)value within:(id)within;
+(BOOL)matchesValue:(id)value nearSphere:(id)sphere maxDistance:(id)distance;
+(BOOL)matchesValue:(id)value exists:(id)exists;
+(BOOL)matchesValue:(id)value regex:(id)regex withOptions:(id)options;
+(BOOL)matchesValue:(id)value containsAllObjectsInArray:(id)array;
+(BOOL)matchesValue:(id)value notContainedIn:(id)anIn;
+(BOOL)matchesValue:(id)value containedIn:(id)anIn;
+(BOOL)matchesValue:(id)value greaterThanOrEqualTo:(id)to;
+(BOOL)matchesValue:(id)value greaterThan:(id)than;
+(BOOL)matchesValue:(id)value lessThanOrEqualTo:(id)to;
+(BOOL)matchesValue:(id)value lessThan:(id)than;
+(BOOL)matchesValue:(id)value notEqualTo:(id)to;
+(BOOL)matchesValue:(id)value equalTo:(id)to;
+(BOOL)matchesValue:(id)value constraint:(id)constraint withDecider:(id)decider;
+(BOOL)matchesArray:(id)array constraint:(id)constraint withDecider:(id)decider;
-(void).cxx_destruct;
-(id)fetchIncludesForObjectAsync:(id)objectAsync queryState:(id)state database:(id)database;
-(id)fetchIncludesAsyncForResults:(id)results ofQueryState:(id)queryState inDatabase:(id)database;
-(void)_sortResults:(id)results ofQueryState:(id)queryState;
-(id)resultsByApplyingOptions:(unsigned char)options ofQueryState:(id)queryState toResults:(id)results;
-(id)createMatcherForQueryState:(id)queryState user:(id)user;
-(id)fetchIncludeAsync:(id)async container:(id)container database:(id)database;
-(id)createMatcherWithQueryConstraints:(id)queryConstraints user:(id)user;
-(id)createOrMatcherForQueries:(id)queries user:(id)user;
-(id)createMatcherWithOperator:(id)anOperator constraints:(id)constraints key:(id)key allKeyConstraints:(id)constraints4 user:(id)user;
-(id)createMatcherForKey:(id)key dontSelect:(id)select user:(id)user;
-(id)createMatcherForKey:(id)key select:(id)select user:(id)user;
-(id)createMatcherForKey:(id)key notInQuery:(id)query user:(id)user;
-(id)createMatcherForKey:(id)key inQuery:(id)query user:(id)user;
-(id)valueForContainer:(id)container key:(id)key depth:(int)depth;
-(id)valueForContainer:(id)container key:(id)key;
-(id)initWithOfflineStore:(id)offlineStore;
@end

