/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "wotblitz-Structs.h"
#import "NSCopying.h"
#import </libobjc.A.h>
#import "NSSecureCoding.h"

@class CBAFSecurityPolicy, CBAFHTTPRequestSerializer, CBAFHTTPResponseSerializer, NSOperationQueue, NSURL, CBAFNetworkReachabilityManager, NSURLCredential;
@protocol CBAFURLResponseSerialization, CBAFURLRequestSerialization;

@interface CBAFHTTPRequestOperationManager : NSObject <NSSecureCoding, NSCopying> {
	BOOL _shouldUseCredentialStorage;
	NSURL* _baseURL;
	CBAFHTTPRequestSerializer<CBAFURLRequestSerialization>* _requestSerializer;
	CBAFHTTPResponseSerializer<CBAFURLResponseSerialization>* _responseSerializer;
	NSOperationQueue* _operationQueue;
	NSURLCredential* _credential;
	CBAFSecurityPolicy* _securityPolicy;
	CBAFNetworkReachabilityManager* _reachabilityManager;
	dispatch_queue_s* _completionQueue;
	dispatch_group_s* _completionGroup;
}
@property(assign, nonatomic) dispatch_group_s* completionGroup;
@property(assign, nonatomic) dispatch_queue_s* completionQueue;
@property(retain, nonatomic) CBAFNetworkReachabilityManager* reachabilityManager;
@property(retain, nonatomic) CBAFSecurityPolicy* securityPolicy;
@property(retain, nonatomic) NSURLCredential* credential;
@property(assign, nonatomic) BOOL shouldUseCredentialStorage;
@property(retain, nonatomic) NSOperationQueue* operationQueue;
@property(retain, nonatomic) CBAFHTTPResponseSerializer<CBAFURLResponseSerialization>* responseSerializer;
@property(retain, nonatomic) CBAFHTTPRequestSerializer<CBAFURLRequestSerialization>* requestSerializer;
@property(retain, nonatomic) NSURL* baseURL;
+(BOOL)supportsSecureCoding;
+(id)manager;
-(void).cxx_destruct;
-(id)copyWithZone:(NSZone*)zone;
-(void)encodeWithCoder:(id)coder;
-(id)initWithCoder:(id)coder;
-(id)description;
-(id)DELETE:(id)aDelete parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)PATCH:(id)patch parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)PUT:(id)put parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)POST:(id)post parameters:(id)parameters constructingBodyWithBlock:(id)block success:(id)success failure:(id)failure;
-(id)POST:(id)post parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)HEAD:(id)head parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)GET:(id)get parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)HTTPRequestOperationWithRequest:(id)request success:(id)success failure:(id)failure;
-(id)HTTPRequestOperationWithHTTPMethod:(id)httpmethod URLString:(id)string parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)initWithBaseURL:(id)baseURL;
-(id)init;
@end

