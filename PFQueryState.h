/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "wotblitz-Structs.h"
#import "NSCopying.h"
#import "PFBaseState.h"
#import "PFBaseStateSubclass.h"
#import "NSMutableCopying.h"

@class NSArray, NSString, NSSet, NSDictionary;

@interface PFQueryState : PFBaseState <PFBaseStateSubclass, NSCopying, NSMutableCopying> {
	NSString* _parseClassName;
	NSDictionary* _conditions;
	NSArray* _sortKeys;
	NSSet* _includedKeys;
	NSSet* _selectedKeys;
	NSDictionary* _extraOptions;
	int _limit;
	int _skip;
	unsigned char _cachePolicy;
	double _maxCacheAge;
	BOOL _trace;
	BOOL _shouldIgnoreACLs;
	BOOL _shouldIncludeDeletingEventually;
	BOOL _queriesLocalDatastore;
	NSString* _localDatastorePinName;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(copy, nonatomic) NSString* localDatastorePinName;
@property(assign, nonatomic) BOOL queriesLocalDatastore;
@property(assign, nonatomic) BOOL shouldIncludeDeletingEventually;
@property(assign, nonatomic) BOOL shouldIgnoreACLs;
@property(assign, nonatomic) BOOL trace;
@property(assign, nonatomic) double maxCacheAge;
@property(assign, nonatomic) unsigned char cachePolicy;
@property(assign, nonatomic) int skip;
@property(assign, nonatomic) int limit;
@property(readonly, copy, nonatomic) NSDictionary* extraOptions;
@property(readonly, copy, nonatomic) NSSet* selectedKeys;
@property(readonly, copy, nonatomic) NSSet* includedKeys;
@property(readonly, copy, nonatomic) NSString* sortOrderString;
@property(readonly, copy, nonatomic) NSArray* sortKeys;
@property(readonly, copy, nonatomic) NSDictionary* conditions;
@property(copy, nonatomic) NSString* parseClassName;
+(id)stateWithState:(id)state;
+(id)propertyAttributes;
-(void).cxx_destruct;
-(id)mutableCopyWithZone:(NSZone*)zone;
-(id)copyWithZone:(NSZone*)zone;
-(id)initWithState:(id)state;
-(id)init;
@end

