/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>

@class NSFileManager, NSURL;

@interface CLSEventLogSessionRepository : NSObject {
	NSURL* _rootDirectoryURL;
	NSFileManager* _fileManager;
}
+(id)sessionFragmentDirectoryURLForLogFileURL:(id)logFileURL;
+(id)sessionDirectoryURLForSessionFragmentDirectoryURL:(id)sessionFragmentDirectoryURL;
+(id)stateDirectoryURLForSessionDirectoryURL:(id)sessionDirectoryURL;
+(BOOL)isPrepDirectoryURL:(id)url;
+(id)prepDirectoryForDirectoryURL:(id)directoryURL;
+(id)sessionFragmentDirectoryNameWithIdentifier:(id)identifier timestamp:(unsigned long long)timestamp;
+(id)sessionDirectoryNameWithIdentifier:(id)identifier timestamp:(unsigned long long)timestamp;
+(unsigned)priorityForEventLogFileWithName:(id)name;
+(id)activeEventLogFileNameForPriority:(unsigned)priority;
-(BOOL)cleanUpEventLogRepositoryIgnorningSessionFragmentDirectoryURL:(id)url error:(id*)error;
-(BOOL)cleanUpStateDirectoryURL:(id)url ignoringSessionFragmentDirectoryURL:(id)url2 shouldDelete:(BOOL*)aDelete error:(id*)error;
-(BOOL)cleanUpSessionDirectoryURL:(id)url ignoringSessionFragmentDirectoryURL:(id)url2 shouldDelete:(BOOL*)aDelete error:(id*)error;
-(BOOL)cleanUpSessionFragmentDirectoryURL:(id)url shouldDelete:(BOOL*)aDelete error:(id*)error;
-(BOOL)cleanUpDirectoryURL:(id)url shouldDelete:(BOOL*)aDelete error:(id*)error withCleanUpBlock:(id)cleanUpBlock;
-(BOOL)cleanUpLogFileURL:(id)url shouldDelete:(BOOL*)aDelete error:(id*)error;
-(id)contentsOfDirectoryURL:(id)directoryURL error:(id*)error;
-(BOOL)itemURL:(id)url hasPathExtensionMatching:(id)matching;
-(BOOL)itemURL:(id)url hasNameMatching:(id)matching;
-(BOOL)isDirectoryURL:(id)url;
-(BOOL)deleteItemAtURL:(id)url error:(id*)error;
-(BOOL)removeLogFile:(id)file error:(id*)error;
-(id)logFileURLsForAllStates:(id*)allStates;
-(id)logFileURLsForSessionFragmentDirectory:(id)sessionFragmentDirectory error:(id*)error;
-(id)eventLogFileURLForStateName:(id)stateName sessionIdentifier:(id)identifier sessionTimestamp:(unsigned long long)timestamp sessionFragmentIdentifier:(id)identifier4 sessionFragmentTimestamp:(unsigned long long)timestamp5 eventPriority:(unsigned)priority error:(id*)error;
-(BOOL)removeSessionFragmentDirectory:(id)directory error:(id*)error;
-(id)sessionFragmentDirectoryURLForStateName:(id)stateName sessionIdentifier:(id)identifier sessionTimestamp:(unsigned long long)timestamp sessionFragmentIdentifier:(id)identifier4 sessionFragmentTimestamp:(unsigned long long)timestamp5 error:(id*)error;
-(id)sessionFragmentDirectoryURLsForSessionDirectory:(id)sessionDirectory error:(id*)error;
-(BOOL)purgePrepSessionFragmentDirectoriesForStateName:(id)stateName error:(id*)error;
-(id)removePrepStatusFromSessionFragmentDirectoryURL:(id)sessionFragmentDirectoryURL error:(id*)error;
-(id)prepSessionFragmentDirectoryURLForStateName:(id)stateName sessionFragmentDirectoryURL:(id)url error:(id*)error;
-(id)sessionDirectoryURLForStateName:(id)stateName sessionIdentifier:(id)identifier sessionTimestamp:(unsigned long long)timestamp error:(id*)error;
-(id)sessionDirectoryURLsForStateName:(id)stateName error:(id*)error;
-(id)arrayByFilteringNonDirectoriesFromURLs:(id)urls;
-(id)stateDirectoryURLForStateName:(id)stateName error:(id*)error;
-(id)statesDirectoryURL:(id*)url;
-(BOOL)createDirectoryWithURL:(id)url error:(id*)error;
-(BOOL)createFileWithURL:(id)url error:(id*)error;
-(BOOL)deleteItemAtPath:(id)path ifNotOfType:(int)type error:(id*)error;
-(id)versionDirectoryName;
-(id)init;
-(id)initWithRootDirectoryPath:(id)rootDirectoryPath;
-(id)initWithRootDirectoryURL:(id)rootDirectoryURL;
-(void)dealloc;
@end

